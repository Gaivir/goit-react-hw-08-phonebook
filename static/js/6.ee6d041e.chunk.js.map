{"version":3,"sources":["views/RegisterView.js"],"names":["styles","form","width","display","flexDirection","marginLeft","marginRight","label","marginBottom","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","onSubmit","style","autoComplete","type","required","onChange","class","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"sOAKMA,EAAS,CACbC,KAAM,CACJC,MAAO,IACPC,QAAS,OACTC,cAAe,SACfC,WAAY,OACZC,YAAa,QAEfC,MAAO,CACLJ,QAAS,OACTC,cAAe,SACfI,aAAc,KAIZC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WACE,MAAkCU,KAAKb,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAErB,OACE,gCACE,oBAAIW,UAAU,cAAd,2HAEA,uBACEC,SAAUF,KAAKL,aACfQ,MAAO1B,EAAOC,KACd0B,aAAa,MAHf,UAKE,wBAAOD,MAAO1B,EAAOO,MAArB,gCAEE,uBACEqB,KAAK,OACLjB,KAAK,OACLkB,UAAQ,EACRb,MAAOL,EACPmB,SAAUP,KAAKT,kBAInB,wBAAOY,MAAO1B,EAAOO,MAArB,mBAEE,uBACEqB,KAAK,QACLjB,KAAK,QACLkB,UAAQ,EACRb,MAAOJ,EACPkB,SAAUP,KAAKT,kBAInB,wBAAOY,MAAO1B,EAAOO,MAArB,iDAEE,uBACEqB,KAAK,WACLjB,KAAK,WACLkB,UAAQ,EACRb,MAAOH,EACPiB,SAAUP,KAAKT,kBAInB,wBAAQc,KAAK,SAASG,MAAM,gBAA5B,kH,GAhEiBC,aAwErBC,EAAqB,CACzBX,WAAYY,IAAeC,UAOdC,sBAAQ,KAAMH,EAAdG,CAAkC3B","file":"static/js/6.ee6d041e.chunk.js","sourcesContent":["import { authOperations } from '../redux/auth';\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister(this.state);\r\n\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"text-center\">Сторінка реєстрації</h1>\r\n\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          style={styles.form}\r\n          autoComplete=\"off\"\r\n        >\r\n          <label style={styles.label}>\r\n            Ім`я\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              required\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label style={styles.label}>\r\n            E-mail\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              required\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label style={styles.label}>\r\n            Пароль\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              required\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" class=\"btn btn-light\">Зареєструватися</button>\r\n          \r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onRegister: (data)=>dispatch(authOperations.register(data)) \r\n// });\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);"],"sourceRoot":""}