{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","Components/AuthNav.js","Components/UserMenu/default-avatar.png","Components/UserMenu/UserMenu.js","Components/Navigation.js","Components/AppBar.js","Components/Container.js","Components/PrivateRoute.js","Components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","redux/contacts/contacts-actions.js"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUserName","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","AuthNav","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","authOperations","connect","authSelectors","defaultAvatar","src","alt","width","type","onClick","variant","header","justifyContent","borderBottom","Container","children","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","path","items","fetchContactSuccess","addContactSuccess","deleteContactSuccess","filter","id","loading","fetchContactRequest","fetchContactError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","onChangeFilter","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"uQAmBe,GACXA,gBAjBoBC,YAAa,wBAkBjCC,gBAjBoBD,YAAa,wBAkBjCE,cAjBkBF,YAAa,sBAkB/BG,aAhBiBH,YAAa,qBAiB9BI,aAhBiBJ,YAAa,qBAiB9BK,WAhBeL,YAAa,mBAiB5BM,cAfkBN,YAAa,sBAgB/BO,cAfkBP,YAAa,sBAgB/BQ,YAfgBR,YAAa,oBAgB7BS,sBAd0BT,YAAa,8BAevCU,sBAd0BV,YAAa,8BAevCW,oBAdwBX,YAAa,6B,cCbnCY,EAAmB,CAAEC,KAAM,KAAMC,MAAO,MAExCC,EAAOC,YAAcJ,GAAD,mBACrBK,EAAYhB,iBAAkB,SAACiB,EAAD,YAAMC,QAAsBJ,QADrC,cAErBE,EAAYb,cAAe,SAACc,EAAD,YAAMC,QAAsBJ,QAFlC,cAGrBE,EAAYV,eAAgB,kBAAMK,KAHb,cAIrBK,EAAYP,uBAAwB,SAACQ,EAAD,YAAMC,WAJrB,IAOpBC,EAAQJ,YAAc,MAAD,mBACtBC,EAAYhB,iBAAkB,SAACiB,EAAD,YAAMC,QAAsBC,SADpC,cAEtBH,EAAYb,cAAe,SAACc,EAAD,YAAMC,QAAsBC,SAFjC,cAGtBH,EAAYV,eAAgB,kBAAM,QAHZ,IAMrBc,EAAW,SAACH,EAAD,YAAMC,SAEjBG,EAAQN,YAAc,MAAD,mBACtBC,EAAYf,cAAgBmB,GADN,cAEtBJ,EAAYZ,WAAagB,GAFH,cAGtBJ,EAAYT,YAAca,GAHJ,cAItBJ,EAAYN,oBAAsBU,GAJZ,IAOrBE,EAAkBP,aAAc,GAAD,mBAChCC,EAAYhB,iBAAkB,kBAAM,KADJ,cAEhCgB,EAAYb,cAAe,kBAAM,KAFD,cAGhCa,EAAYP,uBAAwB,kBAAM,KAHV,cAIhCO,EAAYf,eAAgB,kBAAM,KAJF,cAKhCe,EAAYZ,YAAa,kBAAM,KALC,cAMhCY,EAAYN,qBAAsB,kBAAM,KANR,cAOhCM,EAAYV,eAAgB,kBAAM,KAPF,IAUtBiB,cAAgB,CAC3BT,OACAQ,kBACAH,QACAE,U,0CCvCJG,IAAMC,SAASC,QAAU,yCAGzB,IAAMP,EAAQ,SACNA,GACAK,IAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDV,IAF1DA,EAAQ,WAKNK,IAAMC,SAASE,QAAQC,OAAOC,cAAgB,IA4EvC,GAAEC,SAxEA,SAAAC,GAAW,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DAC5BD,EAAShB,EAAYlB,mBADO,kBAKD0B,IAAMU,KAAK,gBAAiBH,GAL3B,OAKlBI,EALkB,OAOxBhB,EAAUgB,EAASC,KAAKjB,OACxBa,EAAShB,EAAYhB,gBAAgBmC,EAASC,OARtB,gDAUxBJ,EAAShB,EAAYf,cAAc,KAAMoC,UAVjB,yDAAJ,uDAwEDC,MAvDb,SAAAP,GAAW,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DACxBD,EAAShB,EAAYd,gBADG,kBAIFsB,IAAMU,KAAK,eAAgBH,GAJzB,OAInBI,EAJmB,OAKzBhB,EAAUgB,EAASC,KAAKjB,OACtBa,EAAShB,EAAYb,aAAagC,EAASC,OANpB,gDASzBJ,EAAShB,EAAYZ,WAAW,KAAMiC,UATb,yDAAJ,uDAuDSE,OAvCnB,yDAAM,WAAMP,GAAN,SAAAC,EAAA,6DACnBD,EAAShB,EAAYX,iBADF,kBAIXmB,IAAMU,KAAK,iBAJA,OAMjBf,IACAa,EAAShB,EAAYV,iBAPJ,gDASjB0B,EAAShB,EAAYT,YAAY,KAAM8B,UATtB,yDAAN,uDAuC2BG,eAxBnB,yDAAM,WAAOR,EAAUS,GAAjB,mBAAAR,EAAA,2DAGvBQ,IADaC,EAFU,EAEzBC,KAAQxB,MAFiB,wDAS3BA,EAAUuB,GACVV,EAAShB,EAAYR,yBAVM,kBAaFgB,IAAMoB,IAAI,kBAbR,OAanBT,EAbmB,OAezBH,EAAShB,EAAYP,sBAAsB0B,EAASC,OAf3B,kDAiBzBJ,EAAShB,EAAYN,oBAAoB,KAAM2B,UAjBtB,0DAAN,0DC1DR,GACXQ,mBANuB,SAAAC,GAAK,OAAIA,EAAMH,KAAKrB,iBAO3CyB,YALgB,SAAAD,GAAK,OAAIA,EAAMH,KAAK7B,KAAKF,Q,6ICCvCoC,EAAS,CACbC,KAAM,CACJC,QAAS,eACTC,eAAgB,OAChBC,QAAS,GACTC,WAAY,IACZC,MAAO,WAETC,WAAY,CACVD,MAAO,YAwBIE,EApBC,kBACZ,gCACI,cAAC,IAAD,CACIC,GAAG,YACHC,OAAK,EACLC,MAAOX,EAAOC,KACdW,YAAaZ,EAAOO,WAJxB,gFAQA,cAAC,IAAD,CACIE,GAAG,SACHC,OAAK,EACLC,MAAOX,EAAOC,KACdW,YAAaZ,EAAOO,WAJxB,gDC1BO,MAA0B,2C,OCKnCP,EAAS,CACba,UAAW,CACTX,QAAS,OACTY,WAAY,UAEdC,OAAQ,CACNC,YAAa,GAEfpD,KAAM,CACJyC,WAAY,IACZW,YAAa,KAmBXC,EAAqB,CACzBC,SAAUC,IAAe5B,QAGZ6B,eATS,SAAAtB,GAAK,MAAK,CAChClC,KAAMyD,IAActB,YAAYD,GAChCiB,OAAQO,KAO8BL,EAAzBG,EAnBE,SAAC,GAAD,IAAEL,EAAF,EAAEA,OAAQnD,EAAV,EAAUA,KAAMsD,EAAhB,EAAgBA,SAAhB,OACb,sBAAKP,MAAOX,EAAOa,UAAnB,UACI,qBAAKU,IAAKR,EAAQS,IAAI,GAAGC,MAAM,KAAKd,MAAOX,EAAOe,SAClD,uBAAMJ,MAAOX,EAAOpC,KAApB,yDAAoCA,KAExC,wBAAQ8D,KAAK,SAASC,QAAST,EAAUU,QAAQ,kBAAjD,kDCjBE5B,G,MAAS,CACbC,KAAM,CACJC,QAAS,eACTC,eAAgB,OAChBC,QAAS,GACTC,WAAY,IACZC,MAAO,WAETC,WAAY,CACVD,MAAO,aAkCIc,eAJS,SAAAtB,GAAK,MAAK,CAChCxB,gBAAiB+C,IAAcxB,mBAAmBC,MAGrCsB,EA9BI,SAAC,GAAD,IAAG9C,EAAH,EAAGA,gBAAH,OAClB,gCACK,cAAC,IAAD,CACAmC,GAAG,IACHC,OAAK,EACLC,MAAOX,EAAOC,KACdW,YAAaZ,EAAOO,WAJpB,wDASDjC,GACC,cAAC,IAAD,CACAmC,GAAG,YACHC,OAAK,EACLC,MAAOX,EAAOC,KACdW,YAAaZ,EAAOO,WAJpB,oECtBAP,EAAS,CACX6B,OAAQ,CACJ3B,QAAS,OACT4B,eAAgB,gBAChBhB,WAAY,SACZiB,aAAc,sBAkBPX,eAJS,SAACtB,GAAD,MAAY,CAChCxB,gBAAiB+C,IAAcxB,mBAAmBC,MAGvCsB,EAdA,SAAC,GAAD,IAAG9C,EAAH,EAAGA,gBAAH,OACX,yBAAQqC,MAAOX,EAAO6B,OAAtB,UAEI,cAAC,EAAD,IAECvD,EAAkB,cAAC,EAAD,IAAe,cAAC,EAAD,UCtB3B0D,EAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,8BAAMA,K,+DCwB3Bb,eAJS,SAAAtB,GAAK,MAAK,CAChCxB,gBAAiB+C,IAAcxB,mBAAmBC,MAGrCsB,EAlBM,SAAC,GAAD,IACRc,EADQ,EACnBC,UACA7D,EAFmB,EAEnBA,gBACA8D,EAHmB,EAGnBA,WACGC,EAJgB,wBAMnB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACXjE,EAAkB,cAAC4D,EAAD,eAAeK,IAAY,cAAC,IAAD,CAAU9B,GAAI2B,W,+CCelDhB,eAJS,SAAAtB,GAAK,MAAK,CAC9BxB,gBAAiB+C,IAAcxB,mBAAmBC,MAGvCsB,EAtBK,SAAC,GAAD,IACLc,EADK,EAChBC,UACA7D,EAFgB,EAEhBA,gBACA8D,EAHgB,EAGhBA,WACGC,EAJa,wBAMhB,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,SAAAC,GAAK,OACTjE,GAAmB+D,EAAWG,WAC1B,cAAC,IAAD,CAAU/B,GAAI2B,IAEd,cAACF,EAAD,eAAeK,WCXzBE,EAAWC,gBAAK,kBAAM,iCACtBC,EAAeD,gBAAK,kBAAM,iCAC1BE,EAAYF,gBAAK,kBAAM,iCACvBG,EAAeH,gBAAK,kBAAM,iCAE1BI,E,uKAEF,WACAC,KAAKR,MAAMS,qB,oBAIb,WACE,OACJ,eAAC,EAAD,WACQ,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAY,8JAAtB,SACJ,eAAC,IAAD,WACM,cAAC,EAAD,CACEvC,OAAK,EACLwC,KAAK,IACLf,UAAWM,IAEb,cAAC,EAAD,CACES,KAAK,YACLV,YAAU,EACVJ,WAAW,YACXD,UAAWQ,IAEb,cAAC,EAAD,CACEO,KAAK,SACLV,YAAU,EACVJ,WAAW,YACXD,UAAWS,IAEb,cAAC,EAAD,CACEM,KAAK,YACLd,WAAW,SACXD,UAAWU,gB,GAjCLX,aA0CZjB,EAAqB,CACzB+B,iBAAkB7B,IAAe3B,gBAGpB4B,cAAQ,KAAMH,EAAdG,CAAkC0B,G,6DC5C3CK,EAAQpF,YAAc,IAAD,mBACtBqF,KAAsB,SAACtD,EAAD,YAAS5B,WADT,cAEtBmF,KAAoB,SAACvD,EAAD,OAAU5B,EAAV,EAAUA,QAAV,4BAA4B4B,GAA5B,CAAmC5B,OAFjC,cAGtBoF,KAAuB,SAACxD,EAAD,OAAU5B,EAAV,EAAUA,QAAV,OAAwB4B,EAAMyD,QAAO,qBAAGC,KAAgBtF,QAHzD,IAMrBuF,EAAU1F,aAAc,GAAD,mBACxB2F,KAAsB,kBAAM,KADJ,cAExBN,KAAsB,kBAAM,KAFJ,cAGxBO,KAAoB,kBAAM,KAHF,cAIxBC,KAAoB,kBAAM,KAJF,cAKxBP,KAAoB,kBAAM,KALF,cAMxBQ,KAAkB,kBAAM,KANA,cAOxBC,KAAuB,kBAAM,KAPL,cAQxBR,KAAuB,kBAAM,KARL,cASxBS,KAAqB,kBAAM,KATH,IAYvBR,EAASxF,YAAc,GAAD,eACvBiG,KAAiB,SAAC/F,EAAD,YAAKC,YAGrBG,EAAQN,YAAc,KAAM,IAGnBQ,eAAgB,CAC3B4E,QACAI,SACAE,UACApF,U,oBC1BE4F,GAAU,sBAAOC,YAAqB,CACpCC,kBAAmB,CACnBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAFlD,CAKZC,MAIEC,GAAoB,CACtBC,IAAK,OACLC,aACAC,UAAW,CAAC,UAGVC,GAAQC,YAAe,CACzBC,QAAS,CACLvF,KAAMwF,YAAeP,GAAmBQ,KACxCC,SAAUC,IAEdrB,cACAsB,UAAUC,IAKC,IAACR,SAAOS,UAFLC,YAAaV,K,SChC/BW,IAASrD,OACP,cAAC,IAAMsD,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,GAAMA,MAAvB,SACE,cAAC,KAAD,CAAavB,QAAS,yDAAagC,UAAWT,GAAMS,UAApD,SACC,cAAC,IAAD,UACC,cAAC,EAAD,YAKNI,SAASC,eAAe,U,+BCpB1B,+VAEapC,EAAsB3G,YAAa,gCACnCqG,EAAsBrG,YAAa,gCACnC4G,EAAoB5G,YAAa,8BAEjC6G,EAAoB7G,YAAa,8BACjCsG,EAAoBtG,YAAa,8BACjC8G,EAAkB9G,YAAa,4BAE/B+G,EAAuB/G,YAAa,iCACpCuG,EAAuBvG,YAAa,iCACpCgH,EAAqBhH,YAAa,+BAGlCiH,EAAiBjH,YAAa,2B","file":"static/js/main.89b25cc7.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest'); \r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n}","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: setError,\r\n    [authActions.loginError]: setError,\r\n    [authActions.logoutError]: setError,\r\n    [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false,\r\n})\r\n \r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    error\r\n});","import axios from \"axios\";\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n \r\nconst register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n    \r\n    \r\n    try {\r\n        const response = await axios.post('/users/signup', credentials);\r\n\r\n        token.set(response.data.token);\r\n        dispatch(authActions.registerSuccess(response.data));\r\n    } catch (error) {\r\n        dispatch(authActions.registerError(error.message));\r\n    }\r\n   \r\n};\r\n\r\n\r\n\r\nconst logIn = credentials => async dispatch => {\r\n     dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n    token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n      \r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n\r\n};\r\n \r\n\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\n \r\n\r\n\r\nexport default { register, logIn, logOut, getCurrentUser };","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\n\r\nexport default {\r\n    getIsAuthenticated,\r\n    getUserName,\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n    <div>\r\n        <NavLink\r\n            to=\"/register\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n        >Регистрация\r\n        </NavLink>\r\n\r\n        <NavLink\r\n            to=\"/login\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n        >Логин\r\n        </NavLink>\r\n    </div>\r\n)\r\n\r\nexport default AuthNav;","export default __webpack_public_path__ + \"static/media/default-avatar.a6143582.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport defaultAvatar from './default-avatar.png';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({avatar, name, onLogout }) => (\r\n    <div style={styles.container}>\r\n        <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar}/>\r\n        <span style={styles.name}>Вітання, {name}</span>\r\n    {/* <button type=\"button\" onClick={onLogout}>Выйти</button> */}\r\n    <button type=\"button\" onClick={onLogout} variant=\"outline-primary\">Вийти</button>\r\n    </div>\r\n)\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: defaultAvatar,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { Navbar, Container } from 'react-bootstrap';\r\n  \r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n <nav>\r\n      <NavLink\r\n      to=\"/\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Головна\r\n      </NavLink>\r\n    \r\n    {isAuthenticated && (\r\n      <NavLink\r\n      to=\"/contacts\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Контакти\r\n      </NavLink>\r\n    )}\r\n   \r\n\r\n  </nav>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n})\r\n\r\nexport default connect(mapStateToProps)(Navigation);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AuthNav from './AuthNav';\r\nimport UserMenu from './UserMenu/UserMenu';\r\nimport Navigation from './Navigation';\r\nimport { authSelectors } from '../redux/auth'\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n    header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        borderBottom: '1px solid #2A363B',\r\n    },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n    <header style={styles.header} >\r\n\r\n        <Navigation />\r\n         \r\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n       \r\n    </header>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(AppBar)","const Container = ({ children }) => <div>{children}</div>;\r\n\r\nexport default Container;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\n\r\n\r\n\r\nconst PublicRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated && routeProps.restricted ? (\r\n                <Redirect to={redirectTo} /> \r\n            ) : (\r\n                <Component {...props} />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute)","import React, { Component, Suspense, lazy } from \"react\";\nimport { Switch} from \"react-router-dom\";\nimport AppBar from './Components/AppBar';\nimport Container from './Components/Container';\nimport { authOperations } from './redux/auth';\nimport { connect } from 'react-redux';\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nclass App extends Component {\n   \n    componentDidMount() {\n    this.props.onGetCurrentUser();\n    }\n  \n  \n  render() {\n    return (\n<Container>\n        <AppBar />\n        <Suspense fallback = {<p>Зачекайте йде загрузка...</p>}>\n    <Switch>\n          <PublicRoute\n            exact\n            path=\"/\"\n            component={HomeView} />\n          \n          <PublicRoute\n            path=\"/register\"\n            restricted\n            redirectTo='/contacts'\n            component={RegisterView} />\n          \n          <PublicRoute\n            path=\"/login\"\n            restricted\n            redirectTo='/contacts'\n            component={LoginView} />\n          \n          <PrivateRoute\n            path=\"/contacts\"\n            redirectTo='/login'\n            component={ContactsView} />\n        </Switch>\n        </Suspense>\n  </Container>\n\n    )\n  }\n }\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n}\n\nexport default connect(null, mapDispatchToProps)(App);","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    onChangeFilter,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError\r\n} from './contacts-actions';\r\n\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]: (state, {payload}) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [onChangeFilter]: (_, {payload}) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n    error\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER\r\n} from \"redux-persist\";\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport { authReducer } from './auth'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\n\r\n\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n        serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n}),\r\n    logger,\r\n];\r\n\r\n    \r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token']\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactsReducer,\r\n},\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default {store, persistor}; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport store from './redux/store'\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={'Загружаем'} persistor={store.persistor}>\n       <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n// export const onDeleteContact = createAction('contacts/delete');\r\nexport const onChangeFilter = createAction('contacts/changeFilter');\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}